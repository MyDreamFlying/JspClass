package kr.or.ddit.board.controller;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.util.HashMap;
import java.util.Map;
import java.util.UUID;

import javax.annotation.PostConstruct;
import javax.inject.Inject;
import javax.servlet.ServletContext;

import org.apache.commons.io.FileUtils;
import org.springframework.core.io.Resource;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.context.WebApplicationContext;
import org.springframework.web.multipart.MultipartFile;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
public class ImageUploadController {
	@Inject
	private WebApplicationContext context;
//	@Inject
//	private ServletContext application;
	
	private String imageFolderURL =  "/resources/boardImages";
	private File saveFolder;
	
	@PostConstruct
	public void init() throws IOException {
		Resource imageFolderRes = context.getResource(imageFolderURL);
		saveFolder = imageFolderRes.getFile();
//		String realPath = application.getRealPath(imageFolderURL);
//		saveFolder = new File(realPath);
		if(!saveFolder.exists())
			saveFolder.mkdirs();
		log.info("로딩된 saveFolder : {}", saveFolder.getCanonicalPath());
	}
	
	@PostMapping("/board/imageUpload.do")
	@ResponseBody
	public Map<String, Object> imageUpload(@RequestPart(required=true) MultipartFile upload ) throws IOException{
		Map<String, Object> target = new HashMap<>();
		
		if(!upload.isEmpty()) {
			
			String saveName = UUID.randomUUID().toString();
			try(
				InputStream is = upload.getInputStream();	
			){
				File saveFile = new File(saveFolder, saveName);
				FileUtils.copyInputStreamToFile(is, saveFile);
			}
			
		}else {
			
		}
		
		return target;
	}
}

















